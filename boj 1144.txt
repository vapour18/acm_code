#include<cstdio>
#include<cstring>
#include<algorithm>
#include<iostream>
#include<cmath>
#include<queue>
using namespace std;
const int maxn = 5005;
struct Edge{
	int v,next;
}edge[maxn*3];
struct Node{
	int met[305];
}node[maxn];
int n,m,p,en;
int head[maxn],ans[maxn],vis[maxn];
void addedge(int u,int v)
{
	edge[en].v=v; 
	edge[en].next=head[u];
	head[u]=en++;
}
void init()
{
	memset(head,-1,sizeof(head));
	memset(node,0,sizeof(node));
	memset(ans,0,sizeof(ans));
	memset(vis,0,sizeof(vis));
	en=0;
}
void solve()
{
	int u;
	queue<int> q;
	q.push(p);
	if(vis[p]) return;
	
	vis[p] = 1;
	while(!q.empty())
	{
		u = q.front();q.pop();
		for(int i = 1; i<=300; i++)
			ans[i]+=node[u].met[i];
		for(int i = head[u]; i!=-1;i = edge[i].next)
		{
			int v = edge[i].v;
			if(!vis[v])
			{
				vis[v] = 1;
				q.push(v);
			}
		}
	}
}
int main()
{
	int h,t,a,b;
	while(scanf("%d%d%d",&n,&m,&p)!=EOF)
	{
		init();
		for(int i = 1; i <= n; i++)
		{
			scanf("%d%d",&h,&t);
			for(int j = 1; j <= h; j++)
			{
				scanf("%d%d",&a,&b);
				node[i].met[a] = b;
			}
			for(int j = 1; j <= t; j++)
			{
				scanf("%d",&a);
				addedge(i,a);
			}
		}
		for(int i = 1; i <= m; i++)
		{
			scanf("%d",&a);
			vis[a] = 1;
		}
		solve();
		for(int i = 1; i <= 300; i++)
			if(ans[i])
				printf("%d %d\n",i,ans[i]);
		printf("\n");
	}
	return 0;
}
